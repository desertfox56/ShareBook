version: '3.11.4'

# Определяем сеть для сервисов
networks:
  my-network:
    driver: bridge

# Определяем volumes для сохранения данных
volumes:
  shared-static:
    driver: local
  db-data:
  media_volume:

services:
  # Сервис бекенд-сервера
  server:
    build:
      context: .
    privileged: true # Привилегированный режим для контейнера
    environment:
      - TZ=Europe/Moscow # Устанавливаем часовой пояс
    ports:
      - 8000:8000 # Пробрасываем порт 8000 для доступа к серверу
    #Зависимости
    depends_on:
      - db
    volumes:
      - .:/app # Монтируем текущую директорию в /app
      - shared-static:/app/static  # Используем shared-static для статических файлов
      - media_volume:/app/media # Используем media_volume для медиа файлов
    #Сети
    networks:
      - my-network
    env_file:
      - ./ShareBook/.env # Подключаем .env файл

  # Сервис Nginx
  nginx:
    image: nginx:1.25.4
    environment:
      - TZ=Europe/Moscow
    ports:
      - "80:80" # Пробрасываем порт 80 для доступа к Nginx
    depends_on:
      - server
    volumes:
      - shared-static:/usr/share/nginx/html/static  # Используем shared-static для статических файлов
      - media_volume:/app/media # Используем media_volume для медиа файлов
      - /home/ShareBooks/sharebook-design/sharebook-design/build:/home/ShareBooks/sharebook-design/sharebook-design/build  # Монтируем папку build react приложения
      - /home/ShareBooks/sharebook-design/sharebook-design/public:/home/ShareBooks/sharebook-design/sharebook-design/public # Монтируем папку public react приложения
      - /home/BookLibrary:/home/BookLibrary # Монтируем библиотеку книг(файлы pdf книг)
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro   # Монтируем конфигурацию Nginx
      - /var/log/nginx:/var/log/nginx   # Монтируем лог файлы Nginx
    networks:
      - my-network
    env_file:
      - ./ShareBook/.env

  # Сервис Redis
  redis:
    image: redis:latest
    ports:
      - "6379:6379" # Пробрасываем порт 6379 для доступа к Redis
    networks:
      - my-network
    env_file:
      - ./ShareBook/.env

  # Сервис Celery
  celery:
    build:
      context: .
    command: celery -A ShareBook worker -l info # Команда для запуска Celery
    volumes:
      - .:/app # Монтируем текущую директорию в /app
    depends_on:
      - db
      - redis
    networks:
      - my-network
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0 # URL брокера Celery
      - CELERY_RESULT_BACKEND=redis://redis:6379/0 # URL для хранения результатов Celery
    env_file:
      - ./ShareBook/.env

  # Сервис базы данных PostgreSQL
  db:
    image: postgres
    restart: always # Перезапуск в случае ошибок
    user: postgres # Пользователь базы данных
    volumes:
      - db-data:/var/lib/postgresql/data # Монтируем том для данных базы данных
    environment:
      - TZ=${TIME_ZONE}
      - POSTGRES_DB=ShareBook  # Имя базы данных
      - POSTGRES_PASSWORD=${DB_PASSWORD} # Пароль для базы данных
    expose:
      - 5432 # Открываем порт 5432 для доступа к базе данных
    healthcheck:
      test: [ "CMD", "pg_isready" ] # Проверка доступности базы данных
      interval: 10s # Интервал проверки
      timeout: 5s # Таймаут проверки
      retries: 5 # Количество попыток проверки
    networks:
      - my-network
    env_file:
      - ./ShareBook/.env
